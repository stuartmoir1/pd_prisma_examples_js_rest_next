{"ast":null,"code":"var _jsxFileName = \"/Users/stuartmoir/Desktop/profdev/prisma/my-prisma-examples/javascript/7_rest-nextjs/pages/index.jsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../components/Layout';\nimport Post from '../components/Post';\n\nconst Blog = () => {\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: `jsx-${styles.__hash}` + \" \" + 'page',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: `jsx-${styles.__hash}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, \"My Blog\"), __jsx(\"main\", {\n    className: `jsx-${styles.__hash}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, props.feed.map(post => __jsx(\"div\", {\n    key: post.id,\n    className: `jsx-${styles.__hash}` + \" \" + 'post',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, __jsx(Post, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 15\n    }\n  })))), __jsx(_JSXStyle, {\n    id: styles.__hash,\n    __self: this\n  }, styles)));\n};\n\nconst styles = `\n  .post {\n    background: white;\n    transition: box-shadow 0.1s ease-in;\n  }\n\n  .post:hover {\n    box-shadow: 1px 1px 3px #aaa;\n  }\n\n  .post + .post {\n    margin-top: 2rem;\n  }\n`;\nexport const getServerSideProps = async () => {\n  const res = await fetch('http://localhost:3000/api/feed');\n  const feed = await res.json();\n  return {\n    props: {\n      feed\n    }\n  };\n};\nexport default Blog;","map":{"version":3,"sources":["/Users/stuartmoir/Desktop/profdev/prisma/my-prisma-examples/javascript/7_rest-nextjs/pages/index.jsx"],"names":["fetch","Layout","Post","Blog","props","feed","map","post","id","styles","getServerSideProps","res","json"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,8CAAe,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAeC,IAAI,IAClB;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA,8CAA6B,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAED,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CAFF;AAAA;AAAA;AAAA,aADF,CADF;AAeD,CAhBD;;AAkBA,MAAME,MAAM,GAAI;;;;;;;;;;;;;CAAhB;AAeA,OAAO,MAAMC,kBAAkB,GAAG,YAAY;AAC5C,QAAMC,GAAG,GAAG,MAAMX,KAAK,CAAC,gCAAD,CAAvB;AACA,QAAMK,IAAI,GAAG,MAAMM,GAAG,CAACC,IAAJ,EAAnB;AACA,SAAO;AAAER,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF;AAAT,GAAP;AACD,CAJM;AAMP,eAAeF,IAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\n\nimport Layout from '../components/Layout';\nimport Post from '../components/Post';\n\nconst Blog = () => {\n  return (\n    <Layout>\n      <div className='page'>\n        <h1>My Blog</h1>\n        <main>\n          {props.feed.map(post => (\n            <div key={post.id} className='post'>\n              <Post post={post} />\n            </div>\n          ))}\n        </main>\n        <style jsx>{styles}</style>\n      </div>\n    </Layout>\n  );\n}\n\nconst styles = `\n  .post {\n    background: white;\n    transition: box-shadow 0.1s ease-in;\n  }\n\n  .post:hover {\n    box-shadow: 1px 1px 3px #aaa;\n  }\n\n  .post + .post {\n    margin-top: 2rem;\n  }\n`;\n\nexport const getServerSideProps = async () => {\n  const res = await fetch('http://localhost:3000/api/feed');\n  const feed = await res.json();\n  return { props: { feed } };\n}\n\nexport default Blog;\n"]},"metadata":{},"sourceType":"module"}