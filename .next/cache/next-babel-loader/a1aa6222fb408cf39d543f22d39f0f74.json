{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PrismaClient } from '@prisma/client';\nconst prisma = new PrismaClient(); // POST /api/user\n// Required fields in body: name, email\n\nexport default async function handle(req, res) {\n  const user = await prisma.user.create({\n    data: _objectSpread({}, req.body)\n  });\n  res.json(user);\n}","map":{"version":3,"sources":["/Users/stuartmoir/Desktop/profdev/prisma/my-prisma-examples/javascript/7_rest-nextjs/pages/api/user.js"],"names":["PrismaClient","prisma","handle","req","res","user","create","data","body","json"],"mappings":";;;;;;AAAA,SAASA,YAAT,QAA6B,gBAA7B;AAEA,MAAMC,MAAM,GAAG,IAAID,YAAJ,EAAf,C,CAEA;AACA;;AACA,eAAe,eAAeE,MAAf,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC7C,QAAMC,IAAI,GAAG,MAAMJ,MAAM,CAACI,IAAP,CAAYC,MAAZ,CAAmB;AACpCC,IAAAA,IAAI,oBAAOJ,GAAG,CAACK,IAAX;AADgC,GAAnB,CAAnB;AAGAJ,EAAAA,GAAG,CAACK,IAAJ,CAASJ,IAAT;AACD","sourcesContent":["import { PrismaClient } from '@prisma/client';\n\nconst prisma = new PrismaClient();\n\n// POST /api/user\n// Required fields in body: name, email\nexport default async function handle(req, res) {\n  const user = await prisma.user.create({\n    data: { ...req.body }\n  });\n  res.json(user)\n}\n"]},"metadata":{},"sourceType":"module"}