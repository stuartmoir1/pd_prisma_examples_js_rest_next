{"ast":null,"code":"var _jsxFileName = \"/Users/stuartmoir/Desktop/profdev/prisma/my-prisma-examples/javascript/7_rest-nextjs/pages/p/[id].jsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport ReactMarkdown from 'react-markdown';\nimport Router from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../components/Layout';\n\nasync function publish(id) {\n  const res = await fetch(`http://localhost:3000/api/publish/${id}`, {\n    method: 'PUT'\n  });\n  const data = await res.json();\n  await Router.push('/');\n}\n\nasync function destroy(id) {\n  const res = await fetch(`http://localhost:3000/api/post/${id}`, {\n    method: 'DELETE'\n  });\n  const data = await res.json();\n  Router.push('/');\n}\n\nconst Post = props => {\n  let title = props.title;\n  if (!props.published) title = `${title} (Draft)`;\n  const authorName = props.author ? props.author.name : 'Unknown author';\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-3440979688\" + \" \" + 'page',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    className: \"jsx-3440979688\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, title), __jsx(\"small\", {\n    className: \"jsx-3440979688\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"By \", authorName), __jsx(ReactMarkdown, {\n    source: props.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"jsx-3440979688\" + \" \" + 'actions',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, !props.published && __jsx(\"button\", {\n    onClick: () => publish(props.id),\n    className: \"jsx-3440979688\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Publish\"), __jsx(\"button\", {\n    onClick: () => destroy(props.id),\n    className: \"jsx-3440979688\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"Delete\"))), __jsx(_JSXStyle, {\n    id: \"3440979688\",\n    __self: this\n  }, \".page.jsx-3440979688{background:white;padding:2rem;}.actions.jsx-3440979688{margin-top:2rem;}button.jsx-3440979688{background:#ececec;border:0;border-radius:0.125rem;padding:1rem 2rem;}button.jsx-3440979688+button.jsx-3440979688{margin-left:1rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdHVhcnRtb2lyL0Rlc2t0b3AvcHJvZmRldi9wcmlzbWEvbXktcHJpc21hLWV4YW1wbGVzL2phdmFzY3JpcHQvN19yZXN0LW5leHRqcy9wYWdlcy9wL1tpZF0uanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXdDa0IsQUFHNEIsQUFLRCxBQUlHLEFBT0YsZ0JBVm5CLENBTGUsQUFnQmYsRUFQVyxTQUNjLEVBVHpCLHFCQVVvQixrQkFDcEIiLCJmaWxlIjoiL1VzZXJzL3N0dWFydG1vaXIvRGVza3RvcC9wcm9mZGV2L3ByaXNtYS9teS1wcmlzbWEtZXhhbXBsZXMvamF2YXNjcmlwdC83X3Jlc3QtbmV4dGpzL3BhZ2VzL3AvW2lkXS5qc3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3RNYXJrZG93biBmcm9tICdyZWFjdC1tYXJrZG93bic7XG5pbXBvcnQgUm91dGVyIGZyb20gJ25leHQvcm91dGVyJztcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnO1xuXG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvTGF5b3V0JztcblxuYXN5bmMgZnVuY3Rpb24gcHVibGlzaChpZCkge1xuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS9wdWJsaXNoLyR7aWR9YCwge1xuICAgIG1ldGhvZDogJ1BVVCdcbiAgfSk7XG4gIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuICBhd2FpdCBSb3V0ZXIucHVzaCgnLycpO1xufVxuXG5hc3luYyBmdW5jdGlvbiBkZXN0cm95KGlkKSB7XG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGBodHRwOi8vbG9jYWxob3N0OjMwMDAvYXBpL3Bvc3QvJHtpZH1gLCB7XG4gICAgbWV0aG9kOiAnREVMRVRFJ1xuICB9KTtcbiAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG4gIFJvdXRlci5wdXNoKCcvJyk7XG59XG5cbmNvbnN0IFBvc3QgPSBwcm9wcyA9PiB7XG4gIGxldCB0aXRsZSA9IHByb3BzLnRpdGxlO1xuICBpZiAoIXByb3BzLnB1Ymxpc2hlZCkgdGl0bGUgPSBgJHt0aXRsZX0gKERyYWZ0KWA7XG4gIGNvbnN0IGF1dGhvck5hbWUgPSBwcm9wcy5hdXRob3IgPyBwcm9wcy5hdXRob3IubmFtZSA6ICdVbmtub3duIGF1dGhvcic7XG5cbiAgcmV0dXJuIChcbiAgICA8TGF5b3V0PlxuICAgICAgPGRpdiBjbGFzc05hbWU9J3BhZ2UnPlxuICAgICAgICA8aDI+e3RpdGxlfTwvaDI+XG4gICAgICAgIDxzbWFsbD5CeSB7YXV0aG9yTmFtZX08L3NtYWxsPlxuICAgICAgICA8UmVhY3RNYXJrZG93biBzb3VyY2U9e3Byb3BzLmNvbnRlbnR9IC8+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdhY3Rpb25zJz5cbiAgICAgICAgICB7IXByb3BzLnB1Ymxpc2hlZCAmJiAoXG4gICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9eygpID0+IHB1Ymxpc2gocHJvcHMuaWQpfT5QdWJsaXNoPC9idXR0b24+XG4gICAgICAgICAgKX1cbiAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9eygpID0+IGRlc3Ryb3kocHJvcHMuaWQpfT5EZWxldGU8L2J1dHRvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgLnBhZ2Uge1xuICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICAgIHBhZGRpbmc6IDJyZW07XG4gICAgICAgIH1cblxuICAgICAgICAuYWN0aW9ucyB7XG4gICAgICAgICAgbWFyZ2luLXRvcDogMnJlbTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJ1dHRvbiB7XG4gICAgICAgICAgYmFja2dyb3VuZDogI2VjZWNlYztcbiAgICAgICAgICBib3JkZXI6IDA7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogMC4xMjVyZW07XG4gICAgICAgICAgcGFkZGluZzogMXJlbSAycmVtO1xuICAgICAgICB9XG5cbiAgICAgICAgYnV0dG9uICsgYnV0dG9uIHtcbiAgICAgICAgICBtYXJnaW4tbGVmdDogMXJlbTtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvTGF5b3V0PlxuICApO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0U2VydmVyU2lkZVByb3BzID0gYXN5bmMgY29udGV4dCA9PiB7XG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGBodHRwOi8vbG9jYWxob3N0OjMwMDAvYXBpL3Bvc3QvJHtjb250ZXh0LnBhcmFtcy5pZH1gKTtcbiAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG4gIHJldHVybiB7IHByb3BzOiB7IC4uLmRhdGEgfSB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBQb3N0O1xuIl19 */\\n/*@ sourceURL=/Users/stuartmoir/Desktop/profdev/prisma/my-prisma-examples/javascript/7_rest-nextjs/pages/p/[id].jsx */\"));\n};\n\nexport const getServerSideProps = async context => {\n  const res = await fetch(`http://localhost:3000/api/post/${context.params.id}`);\n  const data = await res.json();\n  return {\n    props: _objectSpread({}, data)\n  };\n};\nexport default Post;","map":{"version":3,"sources":["/Users/stuartmoir/Desktop/profdev/prisma/my-prisma-examples/javascript/7_rest-nextjs/pages/p/[id].jsx"],"names":["ReactMarkdown","Router","fetch","Layout","publish","id","res","method","data","json","push","destroy","Post","props","title","published","authorName","author","name","content","getServerSideProps","context","params"],"mappings":";;;;;;;;;;;AAAA,OAAOA,aAAP,MAA0B,gBAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,eAAeC,OAAf,CAAuBC,EAAvB,EAA2B;AACzB,QAAMC,GAAG,GAAG,MAAMJ,KAAK,CAAE,qCAAoCG,EAAG,EAAzC,EAA4C;AACjEE,IAAAA,MAAM,EAAE;AADyD,GAA5C,CAAvB;AAGA,QAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,QAAMR,MAAM,CAACS,IAAP,CAAY,GAAZ,CAAN;AACD;;AAED,eAAeC,OAAf,CAAuBN,EAAvB,EAA2B;AACzB,QAAMC,GAAG,GAAG,MAAMJ,KAAK,CAAE,kCAAiCG,EAAG,EAAtC,EAAyC;AAC9DE,IAAAA,MAAM,EAAE;AADsD,GAAzC,CAAvB;AAGA,QAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAR,EAAAA,MAAM,CAACS,IAAP,CAAY,GAAZ;AACD;;AAED,MAAME,IAAI,GAAGC,KAAK,IAAI;AACpB,MAAIC,KAAK,GAAGD,KAAK,CAACC,KAAlB;AACA,MAAI,CAACD,KAAK,CAACE,SAAX,EAAsBD,KAAK,GAAI,GAAEA,KAAM,UAAjB;AACtB,QAAME,UAAU,GAAGH,KAAK,CAACI,MAAN,GAAeJ,KAAK,CAACI,MAAN,CAAaC,IAA5B,GAAmC,gBAAtD;AAEA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,wCAAe,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,KAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAWE,UAAX,CAFF,EAGE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEH,KAAK,CAACM,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AAAA,wCAAe,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACN,KAAK,CAACE,SAAP,IACC;AAAQ,IAAA,OAAO,EAAE,MAAMX,OAAO,CAACS,KAAK,CAACR,EAAP,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,EAIE;AAAQ,IAAA,OAAO,EAAE,MAAMM,OAAO,CAACE,KAAK,CAACR,EAAP,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CAJF,CADF;AAAA;AAAA;AAAA,qyGADF;AAoCD,CAzCD;;AA2CA,OAAO,MAAMe,kBAAkB,GAAG,MAAMC,OAAN,IAAiB;AACjD,QAAMf,GAAG,GAAG,MAAMJ,KAAK,CAAE,kCAAiCmB,OAAO,CAACC,MAAR,CAAejB,EAAG,EAArD,CAAvB;AACA,QAAMG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,SAAO;AAAEI,IAAAA,KAAK,oBAAOL,IAAP;AAAP,GAAP;AACD,CAJM;AAMP,eAAeI,IAAf","sourcesContent":["import ReactMarkdown from 'react-markdown';\nimport Router from 'next/router';\nimport fetch from 'isomorphic-unfetch';\n\nimport Layout from '../../components/Layout';\n\nasync function publish(id) {\n  const res = await fetch(`http://localhost:3000/api/publish/${id}`, {\n    method: 'PUT'\n  });\n  const data = await res.json();\n  await Router.push('/');\n}\n\nasync function destroy(id) {\n  const res = await fetch(`http://localhost:3000/api/post/${id}`, {\n    method: 'DELETE'\n  });\n  const data = await res.json();\n  Router.push('/');\n}\n\nconst Post = props => {\n  let title = props.title;\n  if (!props.published) title = `${title} (Draft)`;\n  const authorName = props.author ? props.author.name : 'Unknown author';\n\n  return (\n    <Layout>\n      <div className='page'>\n        <h2>{title}</h2>\n        <small>By {authorName}</small>\n        <ReactMarkdown source={props.content} />\n        <div className='actions'>\n          {!props.published && (\n            <button onClick={() => publish(props.id)}>Publish</button>\n          )}\n          <button onClick={() => destroy(props.id)}>Delete</button>\n        </div>\n      </div>\n      <style jsx>{`\n        .page {\n          background: white;\n          padding: 2rem;\n        }\n\n        .actions {\n          margin-top: 2rem;\n        }\n\n        button {\n          background: #ececec;\n          border: 0;\n          border-radius: 0.125rem;\n          padding: 1rem 2rem;\n        }\n\n        button + button {\n          margin-left: 1rem;\n        }\n      `}</style>\n    </Layout>\n  );\n}\n\nexport const getServerSideProps = async context => {\n  const res = await fetch(`http://localhost:3000/api/post/${context.params.id}`);\n  const data = await res.json();\n  return { props: { ...data } };\n}\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}