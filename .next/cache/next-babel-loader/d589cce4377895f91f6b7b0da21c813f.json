{"ast":null,"code":"var _jsxFileName = \"/Users/stuartmoir/Desktop/profdev/prisma/my-prisma-examples/javascript/7_rest-nextjs/pages/search.jsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport Router from 'next/router';\nimport Layout from '../components/Layout';\nimport Post from '../components/Post';\n\nconst Search = props => {\n  const {\n    0: searchString,\n    1: setSearchString\n  } = useState('');\n\n  const submitData = async e => {\n    console.log('props:', props);\n    e.preventDefault();\n    const url = `http://localhost:3000/api/filterPosts?searchString=${searchString}`;\n    const init = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await fetch(url, init);\n      const data = await res.json();\n      console.log('data:', data);\n      props = _objectSpread({\n        props\n      }, [data]);\n      console.log('props:', props);\n      Router.push('/search');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  console.log(\"props:\", props);\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-3306856670\" + \" \" + 'page',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    onSubmit: submitData,\n    className: \"jsx-3306856670\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"jsx-3306856670\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Search\"), __jsx(\"input\", {\n    autoFocus: true,\n    onChange: e => setSearchString(e.target.value),\n    placeholder: \"Enter text\",\n    type: \"text\",\n    value: searchString,\n    className: \"jsx-3306856670\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), __jsx(\"input\", {\n    disabled: !searchString,\n    type: \"submit\",\n    value: \"Search\",\n    className: \"jsx-3306856670\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), __jsx(\"a\", {\n    href: \"#\",\n    onClick: () => Router.push('/'),\n    className: \"jsx-3306856670\" + \" \" + 'back',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"or Cancel\")), __jsx(\"main\", {\n    className: \"jsx-3306856670\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, props.posts.map(post => __jsx(\"div\", {\n    key: post.id,\n    className: \"jsx-3306856670\" + \" \" + 'post',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, __jsx(Post, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }))))), __jsx(_JSXStyle, {\n    id: \"3306856670\",\n    __self: this\n  }, \".page.jsx-3306856670{background:white;padding:3rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}input[type='text'].jsx-3306856670{width:100%;padding:0.5rem;margin:0.5rem 0;border-radius:0.25rem;border:0.125rem solid rgba(0,0,0,0.2);}input[type='submit'].jsx-3306856670{background:#ececec;border:0;padding:1rem 2rem;}.back.jsx-3306856670{margin-left:1rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdHVhcnRtb2lyL0Rlc2t0b3AvcHJvZmRldi9wcmlzbWEvbXktcHJpc21hLWV4YW1wbGVzL2phdmFzY3JpcHQvN19yZXN0LW5leHRqcy9wYWdlcy9zZWFyY2guanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFFa0IsQUFHNEIsQUFPTixBQVFRLEFBTUYsV0FiRixNQVBGLEFBcUJmLEVBTlcsT0FQTyxFQVFFLEVBZkwsWUFRUyxJQVF4QixrQkFQMkMsc0NBQzNDLEVBVHlCLG1HQUN6QiIsImZpbGUiOiIvVXNlcnMvc3R1YXJ0bW9pci9EZXNrdG9wL3Byb2ZkZXYvcHJpc21hL215LXByaXNtYS1leGFtcGxlcy9qYXZhc2NyaXB0LzdfcmVzdC1uZXh0anMvcGFnZXMvc2VhcmNoLmpzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnO1xuaW1wb3J0IFJvdXRlciBmcm9tICduZXh0L3JvdXRlcic7XG5cbmltcG9ydCBMYXlvdXQgZnJvbSAnLi4vY29tcG9uZW50cy9MYXlvdXQnO1xuaW1wb3J0IFBvc3QgZnJvbSAnLi4vY29tcG9uZW50cy9Qb3N0JztcblxuY29uc3QgU2VhcmNoID0gcHJvcHMgPT4ge1xuXG4gIGNvbnN0IFtzZWFyY2hTdHJpbmcsIHNldFNlYXJjaFN0cmluZ10gPSB1c2VTdGF0ZSgnJyk7XG5cbiAgY29uc3Qgc3VibWl0RGF0YSA9IGFzeW5jIGUgPT4ge1xuXG4gICAgY29uc29sZS5sb2coJ3Byb3BzOicsIHByb3BzKTtcblxuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCB1cmwgPSBgaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS9maWx0ZXJQb3N0cz9zZWFyY2hTdHJpbmc9JHtzZWFyY2hTdHJpbmd9YDtcbiAgICBjb25zdCBpbml0ID0ge1xuICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaCh1cmwsIGluaXQpO1xuICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG5cbiAgICAgIGNvbnNvbGUubG9nKCdkYXRhOicsIGRhdGEpO1xuXG4gICAgICBwcm9wcyA9IHsgcHJvcHMsIC4uLltkYXRhXX1cblxuICAgICAgY29uc29sZS5sb2coJ3Byb3BzOicsIHByb3BzKTtcblxuICAgICAgUm91dGVyLnB1c2goJy9zZWFyY2gnKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgIH1cbiAgfVxuXG4gIGNvbnNvbGUubG9nKFwicHJvcHM6XCIsIHByb3BzKTtcblxuICByZXR1cm4gKFxuICAgIDxMYXlvdXQ+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT0ncGFnZSc+XG4gICAgICAgIDxmb3JtIG9uU3VibWl0PXtzdWJtaXREYXRhfT5cbiAgICAgICAgICA8aDE+U2VhcmNoPC9oMT5cbiAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgIGF1dG9Gb2N1c1xuICAgICAgICAgICAgb25DaGFuZ2U9e2UgPT4gc2V0U2VhcmNoU3RyaW5nKGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICAgIHBsYWNlaG9sZGVyPSdFbnRlciB0ZXh0J1xuICAgICAgICAgICAgdHlwZT0ndGV4dCdcbiAgICAgICAgICAgIHZhbHVlPXtzZWFyY2hTdHJpbmd9XG4gICAgICAgICAgLz5cbiAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgIGRpc2FibGVkPXshc2VhcmNoU3RyaW5nfVxuICAgICAgICAgICAgdHlwZT0nc3VibWl0J1xuICAgICAgICAgICAgdmFsdWU9J1NlYXJjaCdcbiAgICAgICAgICAvPlxuICAgICAgICAgIDxhIGNsYXNzTmFtZT0nYmFjaycgaHJlZj0nIycgb25DbGljaz17KCkgPT4gUm91dGVyLnB1c2goJy8nKX0+XG4gICAgICAgICAgICBvciBDYW5jZWxcbiAgICAgICAgICA8L2E+XG4gICAgICAgIDwvZm9ybT5cbiAgICAgICAgPG1haW4+XG4gICAgICAgICAge3Byb3BzLnBvc3RzLm1hcChwb3N0ID0+IChcbiAgICAgICAgICAgIDxkaXYga2V5PXtwb3N0LmlkfSBjbGFzc05hbWU9J3Bvc3QnPlxuICAgICAgICAgICAgICA8UG9zdCBwb3N0PXtwb3N0fSAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKSl9XG4gICAgICAgIDwvbWFpbj5cbiAgICAgIDwvZGl2PlxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAucGFnZSB7XG4gICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgcGFkZGluZzogM3JlbTtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICB9XG5cbiAgICAgICAgaW5wdXRbdHlwZT0ndGV4dCddIHtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBwYWRkaW5nOiAwLjVyZW07XG4gICAgICAgICAgbWFyZ2luOiAwLjVyZW0gMDtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAwLjI1cmVtO1xuICAgICAgICAgIGJvcmRlcjogMC4xMjVyZW0gc29saWQgcmdiYSgwLCAwLCAwLCAwLjIpO1xuICAgICAgICB9XG5cbiAgICAgICAgaW5wdXRbdHlwZT0nc3VibWl0J10ge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICNlY2VjZWM7XG4gICAgICAgICAgYm9yZGVyOiAwO1xuICAgICAgICAgIHBhZGRpbmc6IDFyZW0gMnJlbTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5iYWNrIHtcbiAgICAgICAgICBtYXJnaW4tbGVmdDogMXJlbTtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvTGF5b3V0PlxuICApXG59XG5cbmV4cG9ydCBjb25zdCBnZXRTZXJ2ZXJTaWRlUHJvcHMgPSBhc3luYyBjb250ZXh0ID0+IHtcblxuICBjb25zb2xlLmxvZyhcIkNPTlRFWFQuUkVTOlwiLCBjb250ZXh0LnJlcyk7XG5cbiAgbGV0IHBvc3RzID0gW107XG4gIGlmIChjb250ZXh0LnBhcmFtcyAmJiBjb250ZXh0LnBhcmFtcy5zZWFyY2hTdHJpbmcpIHtcbiAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS9maWx0ZXJQb3N0cz9zZWFyY2hTdHJpbmc9JHtjb250ZXh0LnBhcmFtcy5zZWFyY2hTdHJpbmd9YCk7XG4gICAgcG9zdHMgPSBhd2FpdCByZXMuanNvbigpOyAgICBcbiAgfSAgXG5cbiAgcmV0dXJuIHsgcHJvcHM6IHsgcG9zdHMgfSB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBTZWFyY2g7Il19 */\\n/*@ sourceURL=/Users/stuartmoir/Desktop/profdev/prisma/my-prisma-examples/javascript/7_rest-nextjs/pages/search.jsx */\"));\n};\n\nexport const getServerSideProps = async context => {\n  console.log(\"CONTEXT.RES:\", context.res);\n  let posts = [];\n\n  if (context.params && context.params.searchString) {\n    const res = await fetch(`http://localhost:3000/api/filterPosts?searchString=${context.params.searchString}`);\n    posts = await res.json();\n  }\n\n  return {\n    props: {\n      posts\n    }\n  };\n};\nexport default Search;","map":{"version":3,"sources":["/Users/stuartmoir/Desktop/profdev/prisma/my-prisma-examples/javascript/7_rest-nextjs/pages/search.jsx"],"names":["React","useState","fetch","Router","Layout","Post","Search","props","searchString","setSearchString","submitData","e","console","log","preventDefault","url","init","method","headers","res","data","json","push","error","target","value","posts","map","post","id","getServerSideProps","context","params"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport Router from 'next/router';\n\nimport Layout from '../components/Layout';\nimport Post from '../components/Post';\n\nconst Search = props => {\n\n  const [searchString, setSearchString] = useState('');\n\n  const submitData = async e => {\n\n    console.log('props:', props);\n\n    e.preventDefault();\n    const url = `http://localhost:3000/api/filterPosts?searchString=${searchString}`;\n    const init = {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' },\n    }\n\n    try {\n      const res = await fetch(url, init);\n      const data = await res.json();\n\n      console.log('data:', data);\n\n      props = { props, ...[data]}\n\n      console.log('props:', props);\n\n      Router.push('/search');\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  console.log(\"props:\", props);\n\n  return (\n    <Layout>\n      <div className='page'>\n        <form onSubmit={submitData}>\n          <h1>Search</h1>\n          <input\n            autoFocus\n            onChange={e => setSearchString(e.target.value)}\n            placeholder='Enter text'\n            type='text'\n            value={searchString}\n          />\n          <input\n            disabled={!searchString}\n            type='submit'\n            value='Search'\n          />\n          <a className='back' href='#' onClick={() => Router.push('/')}>\n            or Cancel\n          </a>\n        </form>\n        <main>\n          {props.posts.map(post => (\n            <div key={post.id} className='post'>\n              <Post post={post} />\n            </div>\n          ))}\n        </main>\n      </div>\n      <style jsx>{`\n        .page {\n          background: white;\n          padding: 3rem;\n          display: flex;\n          justify-content: center;\n        }\n\n        input[type='text'] {\n          width: 100%;\n          padding: 0.5rem;\n          margin: 0.5rem 0;\n          border-radius: 0.25rem;\n          border: 0.125rem solid rgba(0, 0, 0, 0.2);\n        }\n\n        input[type='submit'] {\n          background: #ececec;\n          border: 0;\n          padding: 1rem 2rem;\n        }\n\n        .back {\n          margin-left: 1rem;\n        }\n      `}</style>\n    </Layout>\n  )\n}\n\nexport const getServerSideProps = async context => {\n\n  console.log(\"CONTEXT.RES:\", context.res);\n\n  let posts = [];\n  if (context.params && context.params.searchString) {\n    const res = await fetch(`http://localhost:3000/api/filterPosts?searchString=${context.params.searchString}`);\n    posts = await res.json();    \n  }  \n\n  return { props: { posts } };\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}