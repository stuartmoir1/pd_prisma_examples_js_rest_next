{"ast":null,"code":"import { PrismaClient } from '@prisma/client';\nconst prisma = new PrismaClient();\nexport default async function handle(req, res) {\n  const id = req.query.id;\n\n  if (req.method === 'GET') {\n    handleGET(id, res);\n  } else if (req.method === 'DELETE') {\n    handleDELETE(id, res);\n  } else {\n    throw new Error(`The HTTP ${req.method} method is not supported at this route`);\n  }\n} // GET /api/post/:id\n\nasync function handleGET(id, res) {\n  const post = await prisma.post.findOne({\n    where: {\n      id: Number(id)\n    },\n    include: {\n      author: true\n    }\n  });\n  res.json(post);\n} // DELETE /api/post/:id\n\n\nasync function handleDELETE(id, res) {\n  const post = await prisma.post.delete({\n    where: {\n      id: Number(id)\n    }\n  });\n  res.json(post);\n}","map":{"version":3,"sources":["/Users/stuartmoir/Desktop/profdev/prisma/my-prisma-examples/javascript/7_rest-nextjs/pages/api/post/[id].js"],"names":["PrismaClient","prisma","handle","req","res","id","query","method","handleGET","handleDELETE","Error","post","findOne","where","Number","include","author","json","delete"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AAEA,MAAMC,MAAM,GAAG,IAAID,YAAJ,EAAf;AAEA,eAAe,eAAeE,MAAf,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC7C,QAAMC,EAAE,GAAGF,GAAG,CAACG,KAAJ,CAAUD,EAArB;;AAEA,MAAIF,GAAG,CAACI,MAAJ,KAAe,KAAnB,EAA0B;AACxBC,IAAAA,SAAS,CAACH,EAAD,EAAKD,GAAL,CAAT;AACD,GAFD,MAEO,IAAID,GAAG,CAACI,MAAJ,KAAe,QAAnB,EAA6B;AAClCE,IAAAA,YAAY,CAACJ,EAAD,EAAKD,GAAL,CAAZ;AACD,GAFM,MAEA;AACL,UAAM,IAAIM,KAAJ,CAAW,YAAWP,GAAG,CAACI,MAAO,wCAAjC,CAAN;AACD;AACF,C,CAED;;AACA,eAAeC,SAAf,CAAyBH,EAAzB,EAA6BD,GAA7B,EAAkC;AAChC,QAAMO,IAAI,GAAG,MAAMV,MAAM,CAACU,IAAP,CAAYC,OAAZ,CAAoB;AACrCC,IAAAA,KAAK,EAAE;AAAER,MAAAA,EAAE,EAAES,MAAM,CAACT,EAAD;AAAZ,KAD8B;AAErCU,IAAAA,OAAO,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV;AAF4B,GAApB,CAAnB;AAIAZ,EAAAA,GAAG,CAACa,IAAJ,CAASN,IAAT;AACD,C,CAED;;;AACA,eAAgBF,YAAhB,CAA6BJ,EAA7B,EAAiCD,GAAjC,EAAsC;AACpC,QAAMO,IAAI,GAAG,MAAMV,MAAM,CAACU,IAAP,CAAYO,MAAZ,CAAmB;AACpCL,IAAAA,KAAK,EAAE;AAAER,MAAAA,EAAE,EAAES,MAAM,CAACT,EAAD;AAAZ;AAD6B,GAAnB,CAAnB;AAGAD,EAAAA,GAAG,CAACa,IAAJ,CAASN,IAAT;AACD","sourcesContent":["import { PrismaClient } from '@prisma/client';\n\nconst prisma = new PrismaClient();\n\nexport default async function handle(req, res) {\n  const id = req.query.id;\n\n  if (req.method === 'GET') {\n    handleGET(id, res);\n  } else if (req.method === 'DELETE') {\n    handleDELETE(id, res);\n  } else {\n    throw new Error(`The HTTP ${req.method} method is not supported at this route`);\n  }\n}\n\n// GET /api/post/:id\nasync function handleGET(id, res) {\n  const post = await prisma.post.findOne({\n    where: { id: Number(id) },\n    include: { author: true }\n  });\n  res.json(post);\n}\n\n// DELETE /api/post/:id\nasync function  handleDELETE(id, res) {\n  const post = await prisma.post.delete({\n    where: { id: Number(id) }\n  });\n  res.json(post);\n}\n"]},"metadata":{},"sourceType":"module"}